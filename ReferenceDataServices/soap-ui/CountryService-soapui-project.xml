<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="4b0d090b-79f3-4824-a4f5-6419bced8a20" activeEnvironment="Default" name="CountryService" resourceRoot="" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:WsdlInterface" id="ae874453-fc10-4744-af13-e75941920def" wsaVersion="NONE" name="CountryServicePortTypeSOAP11Binding" type="wsdl" bindingName="{saibot.airport/services/utility/reference}CountryServicePortTypeSOAP11Binding" soapVersion="1_1" anonymous="optional" definition="http://localhost:7001/reference/CountryService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:7001/reference/CountryService?wsdl"><con:part><con:url>http://localhost:7001/reference/CountryService?wsdl</con:url><con:content><![CDATA[<WL5G3N0:definitions targetNamespace="saibot.airport/services/utility/reference" xmlns:WL5G3N0="http://schemas.xmlsoap.org/wsdl/" xmlns:WL5G3N1="saibot.airport/services/utility/reference" xmlns:WL5G3N2="http://schemas.xmlsoap.org/wsdl/soap/">
  <WL5G3N0:types>
    <xsd:schema elementFormDefault="qualified" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:reference="saibot.airport/services/utility/reference" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:tns="saibot.airport/services/utility/reference" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
      <xsd:import namespace="saibot.airport/services/utility/reference" schemaLocation="http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2FCountryService"/>
    </xsd:schema>
  </WL5G3N0:types>
  <WL5G3N0:message name="createCountryRequestMessage">
    <WL5G3N0:part element="WL5G3N1:createCountryRequestMessage" name="in"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="createCountryResponseMessage">
    <WL5G3N0:part element="WL5G3N1:createCountryResponseMessage" name="return"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getCountryDetailsRequestMessage">
    <WL5G3N0:part element="WL5G3N1:getCountryDetailsRequestMessage" name="in"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="getCountryDetailsResponseMessage">
    <WL5G3N0:part element="WL5G3N1:getCountryDetailsResponseMessage" name="return"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="findCountriesRequestMessage">
    <WL5G3N0:part element="WL5G3N1:findCountriesRequestMessage" name="in"/>
  </WL5G3N0:message>
  <WL5G3N0:message name="findCountriesResponseMessage">
    <WL5G3N0:part element="WL5G3N1:findCountriesResponseMessage" name="return"/>
  </WL5G3N0:message>
  <WL5G3N0:portType name="CountryServicePortType">
    <WL5G3N0:operation name="getCountryDetails">
      <WL5G3N0:input message="WL5G3N1:getCountryDetailsRequestMessage"/>
      <WL5G3N0:output message="WL5G3N1:getCountryDetailsResponseMessage"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="findCountries">
      <WL5G3N0:input message="WL5G3N1:findCountriesRequestMessage"/>
      <WL5G3N0:output message="WL5G3N1:findCountriesResponseMessage"/>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createCountry">
      <WL5G3N0:input message="WL5G3N1:createCountryRequestMessage"/>
      <WL5G3N0:output message="WL5G3N1:createCountryResponseMessage"/>
    </WL5G3N0:operation>
  </WL5G3N0:portType>
  <WL5G3N0:binding name="CountryServicePortTypeSOAP11Binding" type="WL5G3N1:CountryServicePortType">
    <WL5G3N2:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <WL5G3N0:operation name="getCountryDetails">
      <WL5G3N2:operation soapAction="saibot.airport/services/utility/reference/getCountryDetails" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:body parts="in" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:body parts="return" use="literal"/>
      </WL5G3N0:output>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="findCountries">
      <WL5G3N2:operation soapAction="saibot.airport/services/utility/reference/findCountries" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:body parts="in" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:body parts="return" use="literal"/>
      </WL5G3N0:output>
    </WL5G3N0:operation>
    <WL5G3N0:operation name="createCountry">
      <WL5G3N2:operation soapAction="saibot.airport/services/utility/reference/createCountry" style="document"/>
      <WL5G3N0:input>
        <WL5G3N2:body parts="in" use="literal"/>
      </WL5G3N0:input>
      <WL5G3N0:output>
        <WL5G3N2:body parts="return" use="literal"/>
      </WL5G3N0:output>
    </WL5G3N0:operation>
  </WL5G3N0:binding>
  <WL5G3N0:service name="CountryServicePortTypeSOAP11BindingQSService">
    <WL5G3N0:documentation>OSB Service</WL5G3N0:documentation>
    <WL5G3N0:port binding="WL5G3N1:CountryServicePortTypeSOAP11Binding" name="CountryServicePortTypeSOAP11BindingQSPort">
      <WL5G3N2:address location="http://localhost:7001/reference/CountryService"/>
    </WL5G3N0:port>
  </WL5G3N0:service>
</WL5G3N0:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part><con:part><con:url>http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2FCountryService</con:url><con:content><![CDATA[<xsd:schema targetNamespace="saibot.airport/services/utility/reference" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="saibot.airport/data/common" xmlns:refMsg="saibot.airport/services/utility/reference" xmlns:refData="saibot.airport/data/reference">
  <xsd:import namespace="saibot.airport/data/common" schemaLocation="http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2Fcommon"/>
  <xsd:import namespace="saibot.airport/data/reference" schemaLocation="http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2Freference"/>
  <xsd:element name="createCountryRequestMessage" type="refMsg:createCountryRequestType"/>
  <xsd:element name="createCountryResponseMessage" type="refMsg:createCountryResponseType"/>
  <xsd:element name="findCountriesRequestMessage" type="refMsg:findCountriesRequestType"/>
  <xsd:element name="findCountriesResponseMessage" type="refMsg:findCountriesResponseType"/>
  <xsd:element name="getCountryDetailsRequestMessage" type="refMsg:getCountryDetailsRequestType"/>
  <xsd:element name="getCountryDetailsResponseMessage" type="refMsg:getCountryDetailsResponseType"/>
  <xsd:complexType name="findCountriesRequestType">
    <xsd:sequence>
      <xsd:element name="code" nillable="false" type="common:alpha2Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="name" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="tailcode" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="continent" nillable="false" type="common:alpha2Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="findCountriesResponseType">
    <xsd:sequence>
      <xsd:element name="Countries" minOccurs="1" maxOccurs="1">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Country" nillable="false" type="refData:countryType" minOccurs="1" maxOccurs="1"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="getCountryDetailsRequestType">
    <xsd:sequence>
      <xsd:element name="code" nillable="false" type="common:alpha2Type" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="getCountryDetailsResponseType">
    <xsd:sequence>
      <xsd:sequence>
        <xsd:element name="Country" nillable="false" type="refData:countryType" minOccurs="1" maxOccurs="1"/>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="createCountryRequestType">
    <xsd:sequence>
      <xsd:element name="NewCountry" nillable="false" type="refData:countryType" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="createCountryResponseType">
    <xsd:sequence>
      <xsd:element name="resultCode" nillable="false" type="xsd:integer" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2Fcommon</con:url><con:content><![CDATA[<xsd:schema targetNamespace="saibot.airport/data/common" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:common="saibot.airport/data/common">
  <xsd:simpleType name="baseCelsiusTemperatureType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="-273.15"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="baseFahrenheitTemperatureType">
    <xsd:restriction base="xsd:float">
      <xsd:minInclusive value="-459.67"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="alpha2Type">
    <xsd:annotation>
      <xsd:documentation>2-char uppercase strings only</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="2"/>
      <xsd:pattern value="[A-Z]{2}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="alpha3Type">
    <xsd:annotation>
      <xsd:documentation>3-char uppercase strings only</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="3"/>
      <xsd:pattern value="[A-Z]{3}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="alphaNumeric4Type">
    <xsd:annotation>
      <xsd:documentation>4-char strings only</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="4"/>
      <xsd:pattern value="[0-9A-Z]{4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="countryCodeType">
    <xsd:annotation>
      <xsd:documentation>the code is the unique two letter ISO 3166-1 indication for a country - see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 and http://www.iso.org/iso/home/standards/country_codes.htm</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="common:alpha2Type"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="iataAirportType">
    <xsd:annotation>
      <xsd:documentation>the code is the three letter IATA identification for airports; see for example http://www.world-airport-codes.com/ and http://www.iata.org/publications/Pages/code-search.aspx</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="common:alpha3Type"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="iataAirlineType">
    <xsd:annotation>
      <xsd:documentation>the code is the two letter IATA identification for airlines (carriers); see for example http://www.iata.org/publications/Pages/code-search.aspx; http://en.wikipedia.org/wiki/Airline_codes-All</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="common:alpha2Type"></xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="iacoCodeType">
    <xsd:annotation>
      <xsd:documentation>4-char strings only</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="4"/>
      <xsd:pattern value="[0-9A-Z]{4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="iataEquipmentCodeType">
    <xsd:annotation>
      <xsd:documentation>strings with numbers and captials only; see for example
                         http://www.flugzeuginfo.net/table_accodes_iata_en.php</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="3"/>
      <xsd:pattern value="[0-9A-Z]{4}"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="timezoneOffsetType">
    <xsd:annotation>
      <xsd:documentation>an offset (in hours) versus UTC</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:float">
      <xsd:maxInclusive value="12"/>
      <xsd:minInclusive value="-12"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="geoLocationType">
    <xsd:sequence>
      <xsd:element name="latitude" nillable="false" type="xsd:double" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="longitude" nillable="false" type="xsd:double" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="elevation" nillable="false" type="xsd:double" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="distanceType">
    <xsd:annotation>
      <xsd:documentation>a distance in some unspecified unit</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:double">
      <xsd:minInclusive value="0"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="flightNumberType">
    <xsd:annotation>
      <xsd:documentation>A flight number. Flight numbers are integer values
                         within the range of [0-9999]. Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="9999"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="hourOfDayType">
    <xsd:annotation>
      <xsd:documentation>An hour during the day: 0-23</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="23"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="fiveMinuteBlockType">
    <xsd:annotation>
      <xsd:documentation>A five minute block within one clock hour: 0(-5), 5(-10), 10()-15)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0"/>
      <xsd:maxInclusive value="55"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="yesNoType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Yes"/>
      <xsd:enumeration value="No"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="periodType">
    <xsd:sequence>
      <xsd:element name="season" nillable="false" type="common:seasonType" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="year" nillable="false" type="xsd:nonNegativeInteger" minOccurs="1" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="searchMetaType">
    <xsd:sequence>
      <xsd:element name="offset" nillable="false" type="xsd:nonNegativeInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="numberOfResults" nillable="false" type="xsd:nonNegativeInteger" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="sortBy" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="flightStatusType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Active"/>
      <xsd:enumeration value="Suspended"/>
      <xsd:enumeration value="Open"/>
      <xsd:enumeration value="Closed"/>
      <xsd:enumeration value="Cancelled"/>
      <xsd:enumeration value="Diverted"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="flightActionType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="EnRoute"/>
      <xsd:enumeration value="FinalApproach"/>
      <xsd:enumeration value="Taxiing"/>
      <xsd:enumeration value="AtGate"/>
      <xsd:enumeration value="BagageOnBelt"/>
      <xsd:enumeration value="Prepare"/>
      <xsd:enumeration value="GateOpen"/>
      <xsd:enumeration value="GateClosing"/>
      <xsd:enumeration value="GateClosed"/>
      <xsd:enumeration value="Other"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="seasonType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="S"/>
      <xsd:enumeration value="W"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="arrivalOrDepartureType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="A"/>
      <xsd:enumeration value="D"/>
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="weekDayType">
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="Monday"/>
      <xsd:enumeration value="Tuesday"/>
      <xsd:enumeration value="Wednesday"/>
      <xsd:enumeration value="Thursday"/>
      <xsd:enumeration value="Friday"/>
      <xsd:enumeration value="Saturday"/>
      <xsd:enumeration value="Sunday"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2Freference</con:url><con:content><![CDATA[<xsd:schema targetNamespace="saibot.airport/data/reference" elementFormDefault="qualified" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:reference="saibot.airport/data/reference" xmlns:common="saibot.airport/data/common">
  <xsd:import namespace="saibot.airport/data/common" schemaLocation="http://localhost:7001/reference/CountryService?SCHEMA%2FCountryService%2FSchemas%2Fcommon"/>
  <xsd:complexType name="countryType">
    <xsd:sequence>
      <!--the code is the unique two letter ISO 3166-1 indication for a country - see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2 and http://www.iso.org/iso/home/standards/country_codes.htm-->
      <xsd:element name="code" nillable="false" type="common:alpha2Type" minOccurs="0" maxOccurs="1"/>
      <!--the name is the common name, used to present the country to humans-->
      <xsd:element name="name" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <!--see see http://www.flugzeuginfo.net/table_tailcodes_country_en.php-->
      <xsd:element name="tailcode" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Flag" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="aircarrierType">
    <xsd:sequence>
      <xsd:element name="IATACode" nillable="false" type="common:alpha2Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="PAXCode" nillable="false" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ICAOCode" nillable="false" type="common:alphaNumeric4Type" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Name" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Country" type="reference:countryType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Logo" type="xsd:base64Binary" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="airportType">
    <xsd:sequence>
      <xsd:element name="IATACode" nillable="false" type="common:iataAirportType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="ICAOCode" nillable="false" type="common:iacoCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Name" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Country" type="reference:countryType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="City" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:element name="GeoLocation" type="common:geoLocationType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="UTCOffset" type="common:timezoneOffsetType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="weatherReportType">
    <xsd:sequence>
      <!--based on METAR - see http://weather.cod.edu/notes/metar.html ; http://en.wikipedia.org/wiki/METAR-->
      <!--knots-->
      <xsd:element name="WindSpeed" nillable="false" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="WindDirection" nillable="false" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="DewPointTemperature" nillable="false" type="xsd:double" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="CurrentTemperature" nillable="false" type="xsd:double" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Pressure" type="reference:countryType" minOccurs="0" maxOccurs="1"/>
      <!--Clear, Not significant, few, Scattered, Broken,  Overcast,-->
      <xsd:element name="SkyCondition" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Visibility" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Precipitation" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Obscuration" type="xsd:string" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="aircraftModelType">
    <xsd:sequence>
      <xsd:element name="IATACode" nillable="false" type="common:iataEquipmentCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="IACOCode" nillable="false" type="common:iacoCodeType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Manufacturer" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="Model" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="WakeCategory" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="PassengerCapacity" nillable="false" type="xsd:positiveInteger" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="RangeInKilometers" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
      <xsd:element name="CruiseSpeedInKilolmetersPerHour" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
      <xsd:element name="LengthInMeters" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
      <xsd:element name="HeightInMeters" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
      <xsd:element name="WingSpanInMeters" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
      <xsd:element name="MaximumTakeOffWeightInKilogram" nillable="false" minOccurs="0" maxOccurs="1" type="xsd:positiveInteger"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="aircraftType">
    <xsd:sequence>
      <xsd:element name="aircraftModel" nillable="false" type="reference:aircraftModelType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Registration" nillable="false" type="xsd:string" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="LaunchDate" nillable="false" type="xsd:date" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="gateLocationType">
    <xsd:sequence>
      <xsd:element name="Terminal" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Pier" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="Gate" nillable="false" type="xsd:string" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="timePlanningUnitType">
    <xsd:sequence>
      <xsd:element name="startDate" nillable="false" type="xsd:date" minOccurs="1" maxOccurs="1"/>
      <xsd:element name="endDate" nillable="true" type="xsd:date" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="DaysOfWeek" minOccurs="0" maxOccurs="1">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="day" nillable="false" minOccurs="0" maxOccurs="7" type="common:weekDayType"/>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="HourOfDay" nillable="false" type="common:hourOfDayType" minOccurs="0" maxOccurs="1"/>
      <xsd:element name="FiveMinuteBlock" nillable="false" type="common:fiveMinuteBlockType" minOccurs="0" maxOccurs="1"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:7001/reference/CountryService</con:endpoint></con:endpoints><con:operation id="6f2a241d-c023-48cc-9ba2-599e9b61c7be" isOneWay="false" action="saibot.airport/services/utility/reference/createCountry" name="createCountry" bindingOperationName="createCountry" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dfe20418-a5a7-4566-a5ea-3f6eb6275125" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/reference/CountryService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ref="saibot.airport/services/utility/reference" xmlns:ref1="saibot.airport/data/reference">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ref:createCountryRequestMessage>\r
         <ref:NewCountry>\r
            <ref1:code>IN</ref1:code>\r
            <ref1:name>India</ref1:name>\r
            <ref1:tailcode>VT</ref1:tailcode>\r
            <ref1:Flag></ref1:Flag>\r
         </ref:NewCountry>\r
      </ref:createCountryRequestMessage>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="saibot.airport/services/utility/reference/createCountry"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b99f52f3-62e6-477e-88d9-f4571940daf7" isOneWay="false" action="saibot.airport/services/utility/reference/findCountries" name="findCountries" bindingOperationName="findCountries" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3005e39f-d387-4317-b682-bcd4e18cb72d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/reference/CountryService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ref="saibot.airport/services/utility/reference">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ref:findCountriesRequestMessage>\r
         <!--Optional:-->\r
         <ref:code>?</ref:code>\r
         <!--Optional:-->\r
         <ref:name>?</ref:name>\r
         <!--Optional:-->\r
         <ref:tailcode>?</ref:tailcode>\r
         <!--Optional:-->\r
         <ref:continent>?</ref:continent>\r
      </ref:findCountriesRequestMessage>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="saibot.airport/services/utility/reference/findCountries"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="668954a9-77c4-467e-9e1f-40dba5b49c28" isOneWay="false" action="saibot.airport/services/utility/reference/getCountryDetails" name="getCountryDetails" bindingOperationName="getCountryDetails" type="Request-Response" inputName="" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="cc42826f-ac0e-40eb-918e-8e34e4e87ea5" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:7001/reference/CountryService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ref="saibot.airport/services/utility/reference">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <ref:getCountryDetailsRequestMessage>\r
         <!--Optional:-->\r
         <ref:code>?</ref:code>\r
      </ref:getCountryDetailsRequestMessage>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="saibot.airport/services/utility/reference/getCountryDetails"/></con:call></con:operation></con:interface><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/></con:soapui-project>